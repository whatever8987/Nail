Prompt 1: Modern & Clean Design Template
"Generate a functional React component for a salon landing page template using Tailwind CSS classes.
The component will accept two props: salon (containing salon details like name, address, services, etc.) and template (containing template styling details like colors, fonts, and feature toggles).
Design Aesthetic: Create a Modern, clean, and spacious design. Use straightforward layouts (like simple grids or stacked sections), clear typography, subtle shadows, and a focus on high-quality images. Colors should feel contemporary, using {template.primary_color} for accents/buttons and {template.secondary_color} for backgrounds or borders. Use a clean, sans-serif font (referencing {template.font_family}).
Sections and Content:
Header: A sticky header with moderate padding. Left: Logo (<img src={salon.logo_image} alt="{salon.name} Logo" />). Center (Desktop): Simple, modern navigation links (Home, Services, Gallery, Contact) with clean hover states. Right: A prominent "Book Now" Button (styled with {template.primary_color} background, white text, rounded corners) linking to {salon.booking_url}. Include a simple hamburger icon for mobile menu toggle. Style header background using {template.backgroundColor} or a light variation, with a subtle shadow. Text/icons should be {template.textColor} or contrasting.
Hero Section: Full-width section with a large background image (<div style={{ backgroundImage: \url(${salon.cover_image || template.default_cover_image})` }} />). Apply a semi-transparent dark overlay (bg-black opacity-50). Content should be centered both vertically and horizontally within the overlay: A large, bold heading (<h1>{salon.name}</h1>), a concise subtitle (<p>{salon.hero_subtitle}</p>), and two Call-to-Action buttons below (e.g., "Book Appointment" - styled with{template.primary_color}background, white text; and "Learn More" - outlined button with{template.primary_color}` border and text). Text color white.
Info Section (Strip): A horizontal strip below the hero. Inside, three horizontally arranged, vertically centered blocks: Opening Hours ({salon.opening_hours}), Phone Number ({salon.phone_number}, linked tel:), Address ({salon.address}, {salon.location}). Each block should have a relevant icon (e.g., Clock, Phone, MapPin - use simple SVG or icon placeholders) and text. Use {template.secondaryColor} for the background.
About Section: A section with two columns (side-by-side on desktop, stacked on mobile) with a gap. Left: About image (<img src={salon.about_image || template.default_about_image} alt="Salon interior" />) with rounded corners and a shadow. Right: About text content. Include a heading ("About Us" - styled with {template.primary_color} text color, bold), and paragraphs using {salon.description} (handle line breaks if possible, or suggest whitespace-pre-line).
Services Section: Centered heading ("Our Services" - styled with {template.primary_color} text color), optional subtitle/tagline ({salon.services_tagline}). Display services in a responsive grid (e.g., 2 or 3 columns on desktop) with clean cards. Each service item card: Service Name ({service.name}), Price ({service.price}), maybe a short description ({service.description}). Use placeholder for service loop: {Array.isArray(salon.services) && salon.services.map(service => ...)}. Include a button below the grid linking to {salon.services_url} (styled with {template.primary_color}).
Gallery Section (Conditional): If template features { show_gallery: true }, include this section. Centered heading ("Our Work" or "Gallery" - styled with {template.primary_color} text color), optional subtitle ({salon.gallery_tagline}). Display gallery images ({salon.gallery_images}) in a responsive grid (e.g., 3 or 4 columns on desktop) with small gaps and rounded corners on images. Use placeholder for image loop: {Array.isArray(salon.gallery_images) && salon.gallery_images.map(imageUrl => <img src={imageUrl} />)}. Include a button below linking to {salon.gallery_url}.
Testimonials Section (Conditional): If template features { show_testimonials: true }, include this section. Centered heading ("What Clients Are Saying" - styled with {template.primary_color} text color). Display testimonials ({salon.testimonials}). For each testimonial, show the quote ({testimonial.quote}) and client name ({testimonial.name} or {testimonial.client_name}). Arrange them perhaps as a simple list or centered blocks with subtle backgrounds. Use placeholder for testimonials loop: {Array.isArray(salon.testimonials) && salon.testimonials.map(testimonial => ...)}.
Contact Section: Two columns (side-by-side on desktop). Left: Contact details list (Address, Phone, Email, Hours - using {salon.address}, {salon.phone_number}, {salon.email}, {salon.opening_hours}). Use modern icons for each item. Right: Map/Form area. Include a placeholder for a map embed (<iframe src={salon.map_embed_url} ...></iframe>) or a simple gray box placeholder. Include a "Book an Appointment" button below the contact details linking to {salon.booking_url} (styled with {template.primary_color}).
Footer: Footer section with background color using {template.primary_color} or a darker shade. Layout in 3 columns (desktop): Logo ({salon.footer_logo_image || salon.logo_image}), Quick Links (static list or from features), Contact Info (phone, email, address from {salon} props, maybe social icons if {template.features.show_social_icons}). Include a centered copyright line at the bottom using {salon.name} and the current year. Text color white or light.
Code Requirements:
Generate the code as a single functional React component file.
Use standard HTML elements and Tailwind CSS classes extensively for layout, spacing, typography, and basic styling.
Access dynamic content and styling parameters using the salon and template props (e.g., {salon?.name}, {template?.primary_color}, {template?.features?.show_gallery}). Use optional chaining (?.) for safety.
Apply colors, fonts, and backgrounds using inline style attributes based on styles.primaryColor, styles.secondaryColor, styles.backgroundColor, styles.textColor, and styles.fontFamily.
Include comments explaining where dynamic data or styles are used.
Use placeholder src attributes or text content {} where salon/template data should go.
Assume salon.services, salon.gallery_images, and salon.testimonials are arrays of objects/strings. Use basic array mapping (.map) and property access (e.g., service.name).
Assume template.features is an object. Use optional chaining and property access (e.g., features?.show_gallery).
Include conditional rendering ({someCondition && <Section />}) for optional sections based on features.
Avoid complex state management or effects unless strictly necessary for basic component behavior (like a simple mobile menu toggle). Do NOT implement complex carousel JS logic, just the static structure for list items.
Provide the necessary Tailwind classes and any accompanying standard CSS rules in a way that can be easily copied into a .jsx and a .css file.


Prompt 2: Classic & Elegant Design Template
"Generate a functional React component for a salon landing page template using Tailwind CSS classes.
The component will accept two props: salon (containing salon details like name, address, services, etc.) and template (containing template styling details like colors, fonts, and feature toggles).
Design Aesthetic: Create a Classic, elegant, and luxurious design. Use refined layouts, sophisticated typography (using a serif font referenced by {template.font_family}), a rich color palette using {template.primary_color} (dominant, perhaps darker/richer) and {template.secondary_color} (accents, maybe lighter/muted). Incorporate subtle borders, generous spacing, and a sense of timelessness. Background might be a soft cream or light texture ({template.backgroundColor}).
Sections and Content:
Header: Elegant header with ample padding. Left: Ornate logo (<img src={salon.logo_image} alt="{salon.name} Logo" />). Center (Desktop): Classic navigation links with elegant separators or subtle hover effects. Right: "Book Appointment" Button (styled elegantly with {template.secondary_color} background and {template.primary_color} text, or an outlined border) linking to {salon.booking_url}. Include a mobile menu toggle. Use {template.primary_color} for the header background. Text color {template.secondaryColor}.
Hero Section: Full-width, potentially taller hero section. Background image (<div style={{ backgroundImage: \url(${salon.cover_image || template.default_cover_image})` }} />) with a subtle, elegant overlay (e.g., black with lower opacity, or a tinted overlay matching{template.primary_color}). Content centered or aligned gracefully: A large, graceful heading (<h1>{salon.name}</h1>) in the serif font, a sophisticated subtitle (<p>{salon.hero_subtitle}</p>`) with refined spacing. One main Call-to-Action button below styled to match the aesthetic. Text color white or light.
Info Section (Strip): A more decorative strip or a styled block. Display Opening Hours ({salon.opening_hours}), Phone Number ({salon.phone_number}, linked tel:), Address ({salon.address}, {salon.location}). Use elegant icons or stylized text labels within distinct blocks. Use {template.backgroundColor} or a light accent color for the background. Text color {template.textColor} or {template.primary_color}.
About Section: Classic two-column layout with generous gap. One column for an image (<img src={salon.about_image || template.default_about_image} alt="Salon interior" />) with subtle framing or shadow. The other for text. Heading ("About Us" - styled with {template.primary_color} text color, serif font), paragraphs using {salon.description}. Might include stylized quotes or highlighted text blocks.
Services Section: Centered heading ("Our Services" - styled with {template.primary_color} text color, serif font), optional subtitle ({salon.services_tagline}). Display services as an elegant list or in refined cards/blocks (e.g., 2 or 3 columns on desktop) with soft corners or borders. For each service: Name ({service.name}), Price ({service.price}), optional description ({service.description}). Use subtle dividers or borders between items (styled with {template.secondary_color}). Use placeholder for service loop: {Array.isArray(salon.services) && salon.services.map(service => ...)}. Include a button below the grid linking to {salon.services_url} (styled elegantly).
Gallery Section (Conditional): If template features { show_gallery: true }, include this section. Heading ("Our Work" - styled with {template.primary_color} text color, serif font), optional subtitle ({salon.gallery_tagline}). Display gallery images ({salon.gallery_images}) in a grid with more padding around images and perhaps subtle borders or captions. Use placeholder for image loop: {Array.isArray(salon.gallery_images) && salon.gallery_images.map(imageUrl => <img src={imageUrl} />)}. Include a button below linking to {salon.gallery_url}.
Testimonials Section (Conditional): If template features { show_testimonials: true }, include this section. Centered heading ("What Clients Are Saying" - styled with {template.primary_color} text color, serif font). Display testimonials ({salon.testimonials}) with ample spacing and perhaps decorative quote marks. For each testimonial, show the quote ({testimonial.quote}) and client name ({testimonial.name} or {testimonial.client_name}). Arrange them perhaps as stacked blocks or in a list. Use placeholder for testimonials loop: {Array.isArray(salon.testimonials) && salon.testimonials.map(testimonial => ...)}.
Contact Section: Elegant layout with contact details (Address, Phone, Email, Hours - using {salon} props, elegant icons) on one side, and a Map/Form placeholder (<iframe src={salon.map_embed_url} ...></iframe> or box) on the other. Use refined styling for text and borders. Include a "Book an Appointment" button below the contact details linking to {salon.booking_url} (styled elegantly).
Footer: Footer section with background color using {template.primary_color}. Layout could be 3 columns: Logo ({salon.footer_logo_image || salon.logo_image}), Quick Links (static list or from features), Contact Info (phone, email, address from {salon} props, maybe social icons if {template.features.show_social_icons}). Use {template.secondaryColor} for text color. Include a formal copyright line at the bottom using {salon.name} and the current year.
Code Requirements:
Generate the code as a single functional React component file.
Use standard HTML elements and Tailwind CSS classes for layout, spacing, typography, and basic styling.
Access dynamic content and styling parameters using the salon and template props (e.g., {salon?.name}, {template?.primary_color}, {template?.features?.show_gallery}). Use optional chaining (?.) for safety.
Apply colors, fonts, and backgrounds using inline style attributes based on styles.primaryColor, styles.secondaryColor, styles.backgroundColor, styles.textColor, and styles.fontFamily. Ensure font-serif class or fontFamily style is applied where appropriate.
Include comments explaining where dynamic data or styles are used.
Use placeholder src attributes or text content {} where salon/template data should go.
Assume salon.services, salon.gallery_images, and salon.testimonials are arrays of objects/strings. Use basic array mapping (.map) and property access (e.g., service.name).
Assume template.features is an object. Use optional chaining and property access (e.g., features?.show_gallery).
Include conditional rendering ({someCondition && <Section />}) for optional sections based on features.
Avoid complex state management or effects unless strictly necessary for basic component behavior (like a simple mobile menu toggle). Do NOT implement complex carousel JS logic, just the static structure for list items.
Provide the necessary Tailwind classes and any accompanying standard CSS rules in a way that can be easily copied into a .jsx and a .css file.



Prompt 3: Minimalist Design Template
"Generate a functional React component for a salon landing page template using Tailwind CSS classes.
The component will accept two props: salon (containing salon details like name, address, services, etc.) and template (containing template styling details like colors, fonts, and feature toggles).
Design Aesthetic: Create a Minimalist, clean, and uncluttered design. Focus on generous white space (p-, m-, space- classes), simple typography (a clean sans-serif font referenced by {template.font_family}), very limited use of color (using {template.primary_color} sparingly for small accents like underlines or buttons), and a focus on essential content. Use clean lines and minimal decorative elements. Background should primarily be white or a very light neutral ({template.backgroundColor}). Text color {template.textColor} (likely dark gray or black).
Sections and Content:
Header: Minimal sticky header with vertical padding. Left: Very simple text logo or small, clean image (<img src={salon.logo_image} alt="{salon.name} Logo" /> or just {salon.name} as text). Right: Clean, simple navigation links (Home, Services, Contact) with minimal styling. A simple, maybe outline "Book" button linking to {salon.booking_url}. Mobile toggle icon. Background white or transparent with a subtle border-bottom.
Hero Section: Clean, spacious hero section with significant vertical padding. Background could be a very subtle pattern, a single dominant image (<div style={{ backgroundImage: \url(${salon.cover_image || template.default_cover_image})` }} />) used minimally (e.g., faded, desaturated, or small), or just ample white space. Content centered or simply aligned: Heading (<h1>{salon.name}</h1>) with generous letter spacing, a short, impactful subtitle (<p>{salon.hero_subtitle}</p>). One clean Call-to-Action button below, perhaps outline or subtle fill using{template.primary_color}for border/text. Text color{template.textColor}` or black.
Info Section (Strip): A very simple strip or just placed near the top of the contact section. Display Opening Hours ({salon.opening_hours}), Phone Number ({salon.phone_number}, linked tel:), Address ({salon.address}, {salon.location}). Simple text labels, minimal icons (small and subtle). Use {template.backgroundColor} or a very light neutral background.
About Section: Clean, simple layout. Could be two columns or just stacked blocks. Heading ("About Us" - styled with {template.primary_color} text color, simple font). Use {salon.description} for text paragraphs with clean line spacing. Image (<img src={salon.about_image || template.default_about_image} alt="Salon interior" />) placed simply with ample white space around it, no heavy borders or shadows.
Services Section: Centered heading ("Services" - styled with {template.primary_color} text color). Display services as a simple list or clean cards/blocks with minimal styling (e.g., borders or subtle backgrounds). Service Name ({service.name}), Price ({service.price}), optional description ({service.description}). Use placeholder for service loop: {Array.isArray(salon.services) && salon.services.map(service => ...)}. A clean button below linking to {salon.services_url} (outline or subtle fill).
Gallery Section (Conditional): If template features { show_gallery: true }, include this section. Heading ("Gallery" - styled with {template.primary_color} text color). Display gallery images ({salon.gallery_images}) in a clean, uncluttered grid with minimal gaps. Images are simple <img src={imageUrl} /> with maybe tiny border-radius. Use placeholder for image loop: {Array.isArray(salon.gallery_images) && salon.gallery_images.map(imageUrl => <img src={imageUrl} />)}. Include a button below linking to {salon.gallery_url}.
Testimonials Section (Conditional): If template features { show_testimonials: true }, include this section. Heading ("What Clients Are Saying" - styled with {template.primary_color} text color). Display testimonials ({salon.testimonials}) as simple text blocks with the client name below, using simple formatting. Very minimal styling, relying on white space. Use placeholder for testimonials loop: {Array.isArray(salon.testimonials) && salon.testimonials.map(testimonial => ...)}.
Contact Section: Simple layout. Contact details (Address, Phone, Email, Hours - using {salon} props) listed clearly with minimal styling and spacing. Map/Form placeholder (<iframe src={salon.map_embed_url} ...></iframe> or a clean box) placed cleanly alongside or below contact info. A simple "Book" button linking to {salon.booking_url} (outline or subtle fill).
Footer: Minimal footer section with limited padding. Background white or very light color ({template.backgroundColor} or a light neutral). Centered or left-aligned content: Salon name or logo ({salon.name} or {salon.footer_logo_image || salon.logo_image}), simple contact info (phone, email), copyright line using {salon.name}. No busy social icons or link lists unless essential and styled minimally. Text color {template.textColor} or dark gray.
Code Requirements:
Generate the code as a single functional React component file.
Use standard HTML elements and Tailwind CSS classes extensively for layout, spacing, typography, and basic styling. Prioritize spacing utilities (p-, m-, space-).
Access dynamic content and styling parameters using the salon and template props (e.g., {salon?.name}, {template?.primary_color}, {template?.features?.show_gallery}). Use optional chaining (?.) for safety.
Apply colors, fonts, and backgrounds using inline style attributes based on styles.primaryColor, styles.backgroundColor, styles.textColor, and styles.fontFamily. Prioritize backgroundColor, textColor, and fontFamily from the template. Use primaryColor sparingly for accents.
Include comments explaining where dynamic data or styles are used.
Use placeholder src attributes or text content {} where salon/template data should go.
Assume salon.services, salon.gallery_images, and salon.testimonials are arrays of objects/strings. Use basic array mapping (.map) and property access (e.g., service.name).
Assume template.features is an object. Use optional chaining and property access (e.g., features?.show_gallery).
Include conditional rendering ({someCondition && <Section />}) for optional sections based on features.
Avoid complex state management or effects unless strictly necessary for basic component behavior (like a simple mobile menu toggle). Do NOT implement complex carousel JS logic, just the static structure for list items.
Provide the necessary Tailwind classes and any accompanying standard CSS rules in a way that can be easily copied into a .jsx and a .css file.



Prompt 4: Bold & Vibrant Design Template
"Generate a functional React component for a salon landing page template using Tailwind CSS classes.
The component will accept two props: salon (containing salon details like name, address, services, etc.) and template (containing template styling details like colors, fonts, and feature toggles).
Design Aesthetic: Create a Bold, modern, and energetic design. Use strong typography, vibrant or high-contrast colors (using {template.primary_color} and {template.secondary_color} prominently), potentially asymmetrical layouts or angled sections, and eye-catching Call-to-Action elements. Use a modern sans-serif font (referencing {template.font_family}).
Sections and Content:
Header: Bold, perhaps slightly oversized header, possibly with a contrasting color bar. Left: Striking logo (<img src={salon.logo_image} alt="{salon.name} Logo" />) or large salon name text ({salon.name}). Right: Bold navigation links (Home, Services, Gallery, Contact) with strong hover effects or underlines using {template.secondary_color}. Rightmost: A very prominent "Book Now" Button (large, bold text, styled with {template.primary_color} background, potentially with a contrasting text color or outline) linking to {salon.booking_url}. Mobile toggle icon. Use {template.backgroundColor} or a bold color for the header background. Text color {template.textColor} or high contrast.
Hero Section: Dynamic, eye-catching hero section. Background image (<div style={{ backgroundImage: \url(${salon.cover_image || template.default_cover_image})` }} />) with a strong color overlay or gradient using{template.primary_color}and{template.secondary_color}. Content could be asymmetrical or layered: Large, impactful heading (<h1>{salon.name}</h1>), a punchy subtitle (<p>{salon.hero_subtitle}</p>`). Multiple, distinct Call-to-Action buttons below (large, bold, contrasting styles). Text color white or a vibrant contrast.
Info Section (Strip): A bold info strip, potentially with a solid background color ({template.primary_color} or {template.secondary_color}) and contrasting text. Display Opening Hours ({salon.opening_hours}), Phone Number ({salon.phone_number}, linked tel:), Address ({salon.address}, {salon.location}). Use bold icons or stylized text.
About Section: Dynamic layout, possibly with overlapping elements or angled dividers between sections (achieved with CSS shapes/gradients). One large image (<img src={salon.about_image || template.default_about_image} alt="Salon interior" />), offset or layered with the text block. Heading ("About Us" - styled with {template.primary_color} text color, bold), paragraphs using {salon.description} with strong line spacing.
Services Section: Centered heading ("Our Services" - styled with {template.primary_color} text color, bold), punchy subtitle ({salon.services_tagline}). Display services in a responsive grid (e.g., 2 or 3 columns on desktop) with bold cards. Each service item card: Service Name ({service.name}) - large, bold text, Price ({service.price}) - using {template.secondary_color} for emphasis, optional description ({service.description}). Use placeholder for service loop: {Array.isArray(salon.services) && salon.services.map(service => ...)}. Include a large, prominent button below the grid linking to {salon.services_url} (styled with {template.primary_color} and contrasting text).
Gallery Section (Conditional): If template features { show_gallery: true }, include this section. Heading ("Our Work" - styled with {template.primary_color} text color, bold), optional subtitle ({salon.gallery_tagline}). Display gallery images ({salon.gallery_images}) in a dynamic grid layout, perhaps with some images larger than others or arranged in a masonry style. Images should be striking. Use placeholder for image loop: {Array.isArray(salon.gallery_images) && salon.gallery_images.map(imageUrl => <img src={imageUrl} />)}. Include a bold button below linking to {salon.gallery_url}.
Testimonials Section (Conditional): If template features { show_testimonials: true }, include this section. Centered heading ("What Clients Are Saying" - styled with {template.primary_color} text color, bold). Display testimonials ({salon.testimonials}) using large quotes or bold text. For each testimonial, show the quote ({testimonial.quote}) and client name ({testimonial.name} or {testimonial.client_name}). Use placeholder for testimonials loop: {Array.isArray(salon.testimonials) && salon.testimonials.map(testimonial => ...)}.
Contact Section: Dynamic layout, potentially with bold backgrounds or angled sections. Contact details (Address, Phone, Email, Hours - using {salon} props, bold icons) presented clearly. Map/Form area (<iframe src={salon.map_embed_url} ...></iframe> or box) as a strong visual block. Include a very prominent "Book an Appointment" button linking to {salon.booking_url} (styled with {template.primary_color} background and contrasting text).
Footer: Bold footer section with background color using {template.primary_color} or a contrasting color. Layout could be 3 columns: Logo ({salon.footer_logo_image || salon.logo_image}), Quick Links (static list or from features), Contact Info (from {salon} props, bold social icons if {template.features.show_social_icons}). Use contrasting text color. Include a clear copyright line at the bottom using {salon.name} and the current year.
Code Requirements:
Generate the code as a single functional React component file.
Use standard HTML elements and Tailwind CSS classes extensively for layout, spacing, typography, and bold styling.
Access dynamic content and styling parameters using the salon and template props (e.g., {salon?.name}, {template?.primary_color}, {template?.features?.show_gallery}). Use optional chaining (?.) for safety.
Apply colors, fonts, and backgrounds using inline style attributes based on styles.primaryColor, styles.secondaryColor, styles.backgroundColor, styles.textColor, and styles.fontFamily. Use primary/secondary colors prominently.
Include comments explaining where dynamic data or styles are used.
Use placeholder src attributes or text content {} where salon/template data should go.
Assume salon.services, salon.gallery_images, and salon.testimonials are arrays of objects/strings. Use basic array mapping (.map) and property access (e.g., service.name).
Assume template.features is an object. Use optional chaining and property access (e.g., features?.show_gallery).
Include conditional rendering ({someCondition && <Section />}) for optional sections based on features.
Avoid complex state management or effects unless strictly necessary for basic component behavior (like a simple mobile menu toggle). Do NOT implement complex carousel JS logic, just the static structure for list items.
Provide the necessary Tailwind classes and any accompanying standard CSS rules in a way that can be easily copied into a .jsx and a .css file.



Prompt 5: Natural & Earthy Design Template
"Generate a functional React component for a salon landing page template using Tailwind CSS classes.
The component will accept two props: salon (containing salon details like name, address, services, etc.) and template (containing template styling details like colors, fonts, and feature toggles).
Design Aesthetic: Create a Natural, earthy, and calming design. Use organic shapes, soft textures, natural color tones (using {template.primary_color} and {template.secondary_color} for muted greens, browns, beiges, creams), rounded elements, and perhaps subtle background patterns like wood grain or linen. Use a friendly, natural-looking font (referencing {template.font_family}, could be sans-serif or a gentle serif).
Sections and Content:
Header: Soft, rounded header. Left: Organic-shaped logo (<img src={salon.logo_image} alt="{salon.name} Logo" />) or natural-looking text logo ({salon.name}). Center (Desktop): Gentle navigation links with subtle hover effects or dividers (e.g., small dots). Right: "Book Now" Button (rounded, styled with {template.primary_color} or {template.secondary_color} background, earthy text color) linking to {salon.booking_url}. Mobile toggle icon. Use {template.backgroundColor} or a soft, light color for the header background. Text color {template.textColor} (earthy tone).
Hero Section: Natural, welcoming hero section. Background image (<div style={{ backgroundImage: \url(${salon.cover_image || template.default_cover_image})` }} />) featuring nature (plants, wood, stones) with a soft, perhaps slightly blurred overlay or a muted color filter using{template.primary_color}or{template.secondary_color}. Content centered and balanced: Warm, inviting heading (<h1>{salon.name}</h1>), a calming subtitle (<p>{salon.hero_subtitle}</p>`). Call-to-Action button(s) with soft, rounded shapes. Text color white or a soft, light earthy tone.
Info Section (Strip): An organic-shaped or subtly textured info strip. Display Opening Hours ({salon.opening_hours}), Phone Number ({salon.phone_number}, linked tel:), Address ({salon.address}, {salon.location}). Use natural icons (e.g., leaves, simplified clock/phone shapes). Use {template.backgroundColor} or a light, earthy background color. Text color {template.textColor} (earthy).
About Section: Flowing layout, perhaps with rounded corners on content blocks or images. Image (<img src={salon.about_image || template.default_about_image} alt="Salon interior" />) with rounded corners. Text block with gentle padding. Heading ("About Us" - styled with {template.primary_color} text color, natural font), paragraphs using {salon.description} with relaxed line spacing.
Services Section: Centered heading ("Our Services" - styled with {template.primary_color} text color, natural font), optional subtitle ({salon.services_tagline}). Display services in a responsive grid (e.g., 2 or 3 columns on desktop) with soft, rounded cards. Each service item card: Service Name ({service.name}), Price ({service.price}), optional description ({service.description}). Use subtle separators or borders using {template.secondary_color}. Use placeholder for service loop: {Array.isArray(salon.services) && salon.services.map(service => ...)}. Include a rounded button below the grid linking to {salon.services_url} (styled with {template.primary_color}).
Gallery Section (Conditional): If template features { show_gallery: true }, include this section. Heading ("Our Work" - styled with {template.primary_color} text color, natural font), optional subtitle ({salon.gallery_tagline}). Display gallery images ({salon.gallery_images}) in a grid with rounded corners and gentle spacing. Use placeholder for image loop: {Array.isArray(salon.gallery_images) && salon.gallery_images.map(imageUrl => <img src={imageUrl} />)}. Include a rounded button below linking to {salon.gallery_url}.
Testimonials Section (Conditional): If template features { show_testimonials: true }, include this section. Centered heading ("What Clients Are Saying" - styled with {template.primary_color} text color, natural font). Display testimonials ({salon.testimonials}) in soft, rounded blocks, perhaps with a subtle background texture or color. For each testimonial, show the quote ({testimonial.quote}) and client name ({testimonial.name} or {testimonial.client_name}). Use placeholder for testimonials loop: {Array.isArray(salon.testimonials) && salon.testimonials.map(testimonial => ...)}.
Contact Section: Natural layout. Contact details (Address, Phone, Email, Hours - using {salon} props, natural icons) presented in a clean block. Map/Form area (<iframe src={salon.map_embed_url} ...></iframe> or box) as a block with rounded corners. Include a rounded "Book an Appointment" button linking to {salon.booking_url} (styled with {template.primary_color}).
Footer: Footer section with background color using {template.primary_color} or {template.secondary_color}. Text color a light earthy tone or white. Layout could be 3 columns: Organic logo ({salon.footer_logo_image || salon.logo_image}), Quick Links (static list or from features), Contact Info (from {salon} props, natural-looking social icons if {template.features.show_social_icons}). Include a calming copyright line at the bottom using {salon.name} and the current year.
Code Requirements:
Generate the code as a single functional React component file.
Use standard HTML elements and Tailwind CSS classes extensively for layout, spacing, typography, and styling. Prioritize rounding classes (rounded-, rounded-full).
Access dynamic content and styling parameters using the salon and template props (e.g., {salon?.name}, {template?.primary_color}, {template?.features?.show_gallery}). Use optional chaining (?.) for safety.
Apply colors, fonts, and backgrounds using inline style attributes based on styles.primaryColor, styles.secondaryColor, styles.backgroundColor, styles.textColor, and styles.fontFamily. Use colors from the template for earthy tones.
Include comments explaining where dynamic data or styles are used.
Use placeholder src attributes or text content {} where salon/template data should go.
Assume salon.services, salon.gallery_images, and salon.testimonials are arrays of objects/strings. Use basic array mapping (.map) and property access (e.g., service.name).
Assume template.features is an object. Use optional chaining and property access (e.g., features?.show_gallery).
Include conditional rendering ({someCondition && <Section />}) for optional sections based on features.
Avoid complex state management or effects unless strictly necessary for basic component behavior (like a simple mobile menu toggle). Do NOT implement complex carousel JS logic, just the static structure for list items.
Provide the necessary Tailwind classes and any accompanying standard CSS rules in a way that can be easily copied into a .jsx and a .css file.